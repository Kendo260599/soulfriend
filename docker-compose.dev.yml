# ==============================================================================
# SoulFriend - Development Docker Compose Configuration
# ==============================================================================

version: '3.8'

services:
  # ==============================================================================
  # MongoDB Database (Development)
  # ==============================================================================
  mongodb:
    image: mongo:7.0
    container_name: soulfriend-mongodb-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: dev_password
      MONGO_INITDB_DATABASE: soulfriend_dev
    ports:
      - "27017:27017"
    volumes:
      - mongodb_dev_data:/data/db
    networks:
      - soulfriend-dev-network

  # ==============================================================================
  # Backend API (Development with hot reload)
  # ==============================================================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: soulfriend-backend-dev
    restart: unless-stopped
    ports:
      - "5000:5000"
      - "9229:9229"  # Node.js debug port
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:dev_password@mongodb:27017/soulfriend_dev?authSource=admin
      JWT_SECRET: dev-jwt-secret-key-for-development-only
      ENCRYPTION_KEY: 0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef
      DEFAULT_ADMIN_USERNAME: admin
      DEFAULT_ADMIN_EMAIL: admin@soulfriend.local
      DEFAULT_ADMIN_PASSWORD: DevPassword123!
      CORS_ORIGIN: http://localhost:3000,http://127.0.0.1:3000
      LOG_LEVEL: debug
      GEMINI_API_KEY: ${GEMINI_API_KEY}
    depends_on:
      - mongodb
    networks:
      - soulfriend-dev-network
    volumes:
      - ./backend/src:/app/src:ro
      - ./backend/package.json:/app/package.json:ro
      - backend_dev_logs:/app/logs
      - /app/node_modules  # Prevent overwriting node_modules

# ==============================================================================
# Networks
# ==============================================================================
networks:
  soulfriend-dev-network:
    driver: bridge

# ==============================================================================
# Volumes
# ==============================================================================
volumes:
  mongodb_dev_data:
    driver: local
  backend_dev_logs:
    driver: local