/**
 * Features Section - Hi·ªÉn th·ªã c√°c t√≠nh nƒÉng ch√≠nh c·ªßa SoulFriend
 */

import React from 'react';
import styled, { keyframes } from 'styled-components';

interface FeatureCardProps {
  delay?: string;
}

interface FeatureIconProps {
  gradient?: string;
}

const fadeInUp = keyframes`
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
`;

const bounce = keyframes`
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-10px); }
`;

const FeaturesSection = styled.section`
  padding: 100px 20px;
  background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
  position: relative;
  overflow: hidden;
`;

const FeaturesContainer = styled.div`
  max-width: 1200px;
  margin: 0 auto;
`;

const SectionTitle = styled.h2`
  text-align: center;
  font-size: 3rem;
  color: white;
  margin-bottom: 20px;
  font-weight: 700;
  text-shadow: 0 4px 8px rgba(0,0,0,0.3);
  animation: ${fadeInUp} 1s ease-out;
  
  @media (max-width: 768px) {
    font-size: 2.2rem;
  }
`;

const SectionDescription = styled.p`
  text-align: center;
  font-size: 1.3rem;
  color: rgba(255,255,255,0.9);
  margin-bottom: 60px;
  max-width: 600px;
  margin-left: auto;
  margin-right: auto;
  line-height: 1.6;
  animation: ${fadeInUp} 1s ease-out 0.2s both;
`;

const FeaturesGrid = styled.div`
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
  gap: 40px;
  margin-bottom: 60px;
`;

const FeatureCard = styled.div<FeatureCardProps>`
  background: rgba(255,255,255,0.15);
  backdrop-filter: blur(20px);
  border-radius: 25px;
  padding: 40px 30px;
  text-align: center;
  border: 1px solid rgba(255,255,255,0.2);
  transition: all 0.3s ease;
  animation: ${fadeInUp} 1s ease-out;
  animation-delay: ${props => props.delay || '0s'};
  animation-fill-mode: both;
  
  &:hover {
    transform: translateY(-10px);
    box-shadow: 0 20px 60px rgba(0,0,0,0.3);
    background: rgba(255,255,255,0.25);
  }
`;

const FeatureIcon = styled.div<FeatureIconProps>`
  width: 100px;
  height: 100px;
  background: ${props => props.gradient || 'linear-gradient(45deg, #ff9a9e, #fecfef)'};
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 auto 25px;
  font-size: 2.5rem;
  box-shadow: 0 15px 35px rgba(0,0,0,0.2);
  transition: all 0.3s ease;
  
  &:hover {
    animation: ${bounce} 0.6s ease-in-out;
  }
`;

const FeatureTitle = styled.h3`
  color: white;
  font-size: 1.6rem;
  margin-bottom: 15px;
  font-weight: 600;
`;

const FeatureDescription = styled.p`
  color: rgba(255,255,255,0.85);
  font-size: 1.1rem;
  line-height: 1.6;
`;

const TestimonialsSection = styled.div`
  margin-top: 80px;
  text-align: center;
`;

const TestimonialsTitle = styled.h3`
  color: white;
  font-size: 2.2rem;
  margin-bottom: 40px;
  font-weight: 600;
  text-shadow: 0 2px 4px rgba(0,0,0,0.3);
`;

const TestimonialsGrid = styled.div`
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 30px;
`;

const TestimonialCard = styled.div`
  background: rgba(255,255,255,0.1);
  backdrop-filter: blur(15px);
  border-radius: 20px;
  padding: 30px;
  border: 1px solid rgba(255,255,255,0.15);
  transition: all 0.3s ease;
  
  &:hover {
    transform: translateY(-5px);
    background: rgba(255,255,255,0.2);
  }
`;

const TestimonialText = styled.p`
  color: rgba(255,255,255,0.9);
  font-size: 1.1rem;
  font-style: italic;
  line-height: 1.6;
  margin-bottom: 20px;
  
  &::before {
    content: '"';
    font-size: 2rem;
    color: rgba(255,255,255,0.6);
  }
  
  &::after {
    content: '"';
    font-size: 2rem;
    color: rgba(255,255,255,0.6);
  }
`;

const TestimonialAuthor = styled.div`
  color: rgba(255,255,255,0.8);
  font-weight: 500;
`;

const FeaturesShowcase: React.FC = () => {
  const features = [
    {
      icon: 'üß†',
      title: 'Khoa h·ªçc & Ch√≠nh x√°c',
      description: 'S·ª≠ d·ª•ng c√°c thang ƒëo t√¢m l√Ω chu·∫©n qu·ªëc t·∫ø nh∆∞ PHQ-9, GAD-7, DASS-21 ƒë∆∞·ª£c validate b·ªüi c·ªông ƒë·ªìng khoa h·ªçc to√†n c·∫ßu.',
      gradient: 'linear-gradient(45deg, #667eea, #764ba2)',
      delay: '0.1s'
    },
    {
      icon: 'ü§ñ',
      title: 'AI Th√¥ng minh',
      description: 'C√¥ng ngh·ªá AI ti√™n ti·∫øn ph√¢n t√≠ch s√¢u c√°c m·∫´u h√†nh vi v√† c·∫£m x√∫c, ƒë∆∞a ra khuy·∫øn ngh·ªã c√° nh√¢n h√≥a v√† ch√≠nh x√°c.',
      gradient: 'linear-gradient(45deg, #f093fb, #f5576c)',
      delay: '0.2s'
    },
    {
      icon: 'üîí',
      title: 'B·∫£o m·∫≠t Tuy·ªát ƒë·ªëi',
      description: 'D·ªØ li·ªáu ƒë∆∞·ª£c m√£ h√≥a end-to-end, ho√†n to√†n ·∫©n danh. Ch√∫ng t√¥i kh√¥ng thu th·∫≠p th√¥ng tin c√° nh√¢n ƒë·ªãnh danh.',
      gradient: 'linear-gradient(45deg, #43e97b, #38f9d7)',
      delay: '0.3s'
    },
    {
      icon: 'üìä',
      title: 'B√°o c√°o Chi ti·∫øt',
      description: 'K·∫øt qu·∫£ ƒë∆∞·ª£c tr√¨nh b√†y tr·ª±c quan v·ªõi bi·ªÉu ƒë·ªì, xu h∆∞·ªõng theo th·ªùi gian v√† so s√°nh v·ªõi chu·∫©n d√¢n s·ªë.',
      gradient: 'linear-gradient(45deg, #fa709a, #fee140)',
      delay: '0.4s'
    },
    {
      icon: 'üí¨',
      title: 'H·ªó tr·ª£ 24/7',
      description: 'Chatbot AI th√¥ng minh s·∫µn s√†ng t∆∞ v·∫•n v√† h·ªó tr·ª£ b·∫°n m·ªçi l√∫c, m·ªçi n∆°i v·ªõi c√°c c√¢u tr·∫£ l·ªùi chuy√™n nghi·ªáp.',
      gradient: 'linear-gradient(45deg, #4facfe, #00f2fe)',
      delay: '0.5s'
    },
    {
      icon: 'üì±',
      title: 'ƒêa n·ªÅn t·∫£ng',
      description: 'Truy c·∫≠p m·ªçi l√∫c m·ªçi n∆°i tr√™n ƒëi·ªán tho·∫°i, tablet, m√°y t√≠nh. D·ªØ li·ªáu ƒë∆∞·ª£c ƒë·ªìng b·ªô t·ª± ƒë·ªông.',
      gradient: 'linear-gradient(45deg, #a8edea, #fed6e3)',
      delay: '0.6s'
    }
  ];

  const testimonials = [
    {
      text: 'SoulFriend ƒë√£ gi√∫p t√¥i hi·ªÉu r√µ h∆°n v·ªÅ t√¨nh tr·∫°ng t√¢m l√Ω c·ªßa m√¨nh. K·∫øt qu·∫£ r·∫•t chi ti·∫øt v√† d·ªÖ hi·ªÉu.',
      author: '- Nguy·ªÖn Th·ªã Mai, 28 tu·ªïi'
    },
    {
      text: 'C√¥ng c·ª• tuy·ªát v·ªùi! AI chatbot r·∫•t th√¥ng minh v√† h·ªØu √≠ch. T√¥i c·∫£m th·∫•y ƒë∆∞·ª£c h·ªó tr·ª£ t·ªët.',
      author: '- Tr·∫ßn VƒÉn H√πng, 35 tu·ªïi'
    },
    {
      text: 'Giao di·ªán ƒë·∫πp, d·ªÖ s·ª≠ d·ª•ng v√† quan tr·ªçng nh·∫•t l√† b·∫£o m·∫≠t. T√¥i ho√†n to√†n tin t∆∞·ªüng.',
      author: '- L√™ Th·ªã H·ªìng, 42 tu·ªïi'
    }
  ];

  return (
    <FeaturesSection>
      <FeaturesContainer>
        <SectionTitle>
          T·∫°i sao ch·ªçn SoulFriend? ‚ú®
        </SectionTitle>
        <SectionDescription>
          Ch√∫ng t√¥i k·∫øt h·ª£p khoa h·ªçc t√¢m l√Ω h·ªçc hi·ªán ƒë·∫°i v·ªõi c√¥ng ngh·ªá AI ti√™n ti·∫øn 
          ƒë·ªÉ mang ƒë·∫øn tr·∫£i nghi·ªám ƒë√°nh gi√° s·ª©c kh·ªèe t√¢m l√Ω t·ªët nh·∫•t.
        </SectionDescription>
        
        <FeaturesGrid>
          {features.map((feature, index) => (
            <FeatureCard key={index} delay={feature.delay}>
              <FeatureIcon gradient={feature.gradient}>
                {feature.icon}
              </FeatureIcon>
              <FeatureTitle>{feature.title}</FeatureTitle>
              <FeatureDescription>{feature.description}</FeatureDescription>
            </FeatureCard>
          ))}
        </FeaturesGrid>
        
        <TestimonialsSection>
          <TestimonialsTitle>
            Ng∆∞·ªùi d√πng n√≥i g√¨ v·ªÅ ch√∫ng t√¥i üíï
          </TestimonialsTitle>
          <TestimonialsGrid>
            {testimonials.map((testimonial, index) => (
              <TestimonialCard key={index}>
                <TestimonialText>{testimonial.text}</TestimonialText>
                <TestimonialAuthor>{testimonial.author}</TestimonialAuthor>
              </TestimonialCard>
            ))}
          </TestimonialsGrid>
        </TestimonialsSection>
      </FeaturesContainer>
    </FeaturesSection>
  );
};

export default FeaturesShowcase;