#!/usr/bin/env pwsh
# Script kh·ªüi ƒë·ªông MongoDB cho SoulFriend V3.0

Write-Host "üóÑÔ∏è  Starting MongoDB for SoulFriend V3.0..." -ForegroundColor Green
Write-Host "======================================"

# Ki·ªÉm tra xem MongoDB ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t ch∆∞a
$mongoInstalled = $false

# Ki·ªÉm tra MongoDB service
$mongoService = Get-Service -Name "MongoDB" -ErrorAction SilentlyContinue
if ($mongoService) {
    Write-Host "‚úÖ MongoDB service found" -ForegroundColor Green
    if ($mongoService.Status -ne "Running") {
        Write-Host "üîÑ Starting MongoDB service..." -ForegroundColor Yellow
        try {
            Start-Service -Name "MongoDB"
            Write-Host "‚úÖ MongoDB service started successfully" -ForegroundColor Green
            $mongoInstalled = $true
        } catch {
            Write-Host "‚ùå Failed to start MongoDB service: $($_.Exception.Message)" -ForegroundColor Red
        }
    } else {
        Write-Host "‚úÖ MongoDB service is already running" -ForegroundColor Green
        $mongoInstalled = $true
    }
}

# N·∫øu kh√¥ng c√≥ MongoDB service, th·ª≠ t√¨m MongoDB executable
if (-not $mongoInstalled) {
    $mongodPath = Get-Command "mongod" -ErrorAction SilentlyContinue
    if ($mongodPath) {
        Write-Host "‚úÖ MongoDB executable found at: $($mongodPath.Source)" -ForegroundColor Green
        Write-Host "üîÑ Starting MongoDB manually..." -ForegroundColor Yellow
        
        # T·∫°o th∆∞ m·ª•c data n·∫øu ch∆∞a c√≥
        $dataDir = "mongodb-data"
        if (-not (Test-Path $dataDir)) {
            New-Item -ItemType Directory -Path $dataDir
            Write-Host "üìÅ Created data directory: $dataDir" -ForegroundColor Blue
        }
        
        # Kh·ªüi ƒë·ªông MongoDB
        Start-Process -FilePath "mongod" -ArgumentList "--dbpath", $dataDir, "--port", "27017" -NoNewWindow
        Write-Host "‚úÖ MongoDB started manually" -ForegroundColor Green
        $mongoInstalled = $true
    }
}

# N·∫øu v·∫´n kh√¥ng c√≥ MongoDB, th·ª≠ Docker
if (-not $mongoInstalled) {
    $dockerInstalled = Get-Command "docker" -ErrorAction SilentlyContinue
    if ($dockerInstalled) {
        Write-Host "üê≥ MongoDB not found, trying Docker..." -ForegroundColor Yellow
        
        # Ki·ªÉm tra xem container MongoDB ƒë√£ t·ªìn t·∫°i ch∆∞a
        $mongoContainer = docker ps -a --filter "name=soulfriend-mongo" --format "{{.Names}}"
        
        if ($mongoContainer -eq "soulfriend-mongo") {
            Write-Host "‚úÖ MongoDB container found" -ForegroundColor Green
            
            # Ki·ªÉm tra xem container c√≥ ƒëang ch·∫°y kh√¥ng
            $runningContainer = docker ps --filter "name=soulfriend-mongo" --format "{{.Names}}"
            if ($runningContainer -ne "soulfriend-mongo") {
                Write-Host "üîÑ Starting existing MongoDB container..." -ForegroundColor Yellow
                docker start soulfriend-mongo
                Write-Host "‚úÖ MongoDB container started" -ForegroundColor Green
            } else {
                Write-Host "‚úÖ MongoDB container is already running" -ForegroundColor Green
            }
        } else {
            Write-Host "üîÑ Creating new MongoDB container..." -ForegroundColor Yellow
            docker run -d --name soulfriend-mongo -p 27017:27017 -v soulfriend-mongo-data:/data/db mongo:latest
            Write-Host "‚úÖ MongoDB container created and started" -ForegroundColor Green
        }
        
        $mongoInstalled = $true
    } else {
        Write-Host "‚ùå Neither MongoDB nor Docker found" -ForegroundColor Red
        Write-Host "üìù Running without database (development mode)" -ForegroundColor Yellow
    }
}

if ($mongoInstalled) {
    Write-Host ""
    Write-Host "üîÑ Waiting for MongoDB to be ready..." -ForegroundColor Yellow
    Start-Sleep -Seconds 5
    
    # Test k·∫øt n·ªëi
    try {
        $testConnection = Invoke-WebRequest -Uri "http://localhost:5000/api/health" -UseBasicParsing -TimeoutSec 5
        Write-Host "‚úÖ Backend can connect to database" -ForegroundColor Green
    } catch {
        Write-Host "‚ö†Ô∏è  Backend running without database connection" -ForegroundColor Yellow
    }
}

Write-Host ""
Write-Host "üéâ MongoDB setup complete!" -ForegroundColor Green
Write-Host "Backend: http://localhost:5000" -ForegroundColor Cyan
Write-Host "Frontend: http://localhost:3000" -ForegroundColor Cyan
